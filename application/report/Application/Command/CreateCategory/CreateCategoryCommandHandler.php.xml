<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="CreateCategoryCommandHandler.php" path="/Application/Command/CreateCategory">
    <totals>
      <lines total="57" comments="9" code="48" executable="9" executed="9" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Application\Command\CreateCategory\CreateCategoryCommandHandler" start="17" executable="9" executed="9" crap="4">
      <namespace name="App\Application\Command\CreateCategory"/>
      <method name="__construct" signature="__construct(App\Domain\Category\Repository\CategoryRepository $repository)" start="21" end="24" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="__invoke" signature="__invoke(App\Application\Command\CreateCategory\CreateCategoryCommand $command)" start="31" end="44" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="ensureThatCategoryNotExists" signature="ensureThatCategoryNotExists(App\Domain\Category\ValueObject\CategoryId $categoryId)" start="50" end="55" crap="2" executable="2" executed="2" coverage="100"/>
    </class>
    <coverage>
      <line nr="23">
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithInvalidRequestBody"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithValidRequestMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryThatAlreadyExistsMustThrowException"/>
        <covered by="App\Tests\Unit\Application\Command\DeleteCategory\DeleteCategoryCommandHandlerTest::testDeleteCategoryMustEraseRecord"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithInvalidRequestMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithNotExistUUIDMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryMustUpdateRecord"/>
      </line>
      <line nr="33">
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithInvalidRequestBody"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithValidRequestMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryThatAlreadyExistsMustThrowException"/>
        <covered by="App\Tests\Unit\Application\Command\DeleteCategory\DeleteCategoryCommandHandlerTest::testDeleteCategoryMustEraseRecord"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithInvalidRequestMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithNotExistUUIDMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryMustUpdateRecord"/>
      </line>
      <line nr="35">
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithValidRequestMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryThatAlreadyExistsMustThrowException"/>
        <covered by="App\Tests\Unit\Application\Command\DeleteCategory\DeleteCategoryCommandHandlerTest::testDeleteCategoryMustEraseRecord"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithInvalidRequestMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithNotExistUUIDMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryMustUpdateRecord"/>
      </line>
      <line nr="37">
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithValidRequestMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryThatAlreadyExistsMustThrowException"/>
        <covered by="App\Tests\Unit\Application\Command\DeleteCategory\DeleteCategoryCommandHandlerTest::testDeleteCategoryMustEraseRecord"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithInvalidRequestMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithNotExistUUIDMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryMustUpdateRecord"/>
      </line>
      <line nr="39">
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithValidRequestMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryThatAlreadyExistsMustThrowException"/>
        <covered by="App\Tests\Unit\Application\Command\DeleteCategory\DeleteCategoryCommandHandlerTest::testDeleteCategoryMustEraseRecord"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithInvalidRequestMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithNotExistUUIDMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryMustUpdateRecord"/>
      </line>
      <line nr="40">
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithValidRequestMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryThatAlreadyExistsMustThrowException"/>
        <covered by="App\Tests\Unit\Application\Command\DeleteCategory\DeleteCategoryCommandHandlerTest::testDeleteCategoryMustEraseRecord"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithInvalidRequestMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithNotExistUUIDMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryMustUpdateRecord"/>
      </line>
      <line nr="43">
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithValidRequestMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryThatAlreadyExistsMustThrowException"/>
        <covered by="App\Tests\Unit\Application\Command\DeleteCategory\DeleteCategoryCommandHandlerTest::testDeleteCategoryMustEraseRecord"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithInvalidRequestMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithNotExistUUIDMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryMustUpdateRecord"/>
      </line>
      <line nr="52">
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryWithValidRequestMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryThatAlreadyExistsMustThrowException"/>
        <covered by="App\Tests\Unit\Application\Command\DeleteCategory\DeleteCategoryCommandHandlerTest::testDeleteCategoryMustEraseRecord"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithInvalidRequestMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryWithNotExistUUIDMustLaunchException"/>
        <covered by="App\Tests\Unit\Application\Command\UpdateCategory\UpdateCategoryCommandHandlerTest::testUpdateCategoryMustUpdateRecord"/>
      </line>
      <line nr="53">
        <covered by="App\Tests\Unit\Application\Command\CreateCategory\CreateCategoryCommandHandlerTest::testCreateCategoryThatAlreadyExistsMustThrowException"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Application</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Command</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CreateCategory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Category</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Category</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Category</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CategoryAlreadyExistsException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Category</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Repository</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CategoryRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Category</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ValueObject</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CategoryDescription</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Category</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ValueObject</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CategoryId</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Category</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ValueObject</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CategoryName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Shared</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">DomainException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Assert</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AssertionFailedException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Messenger</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Handler</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">MessageHandlerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CreateCategoryCommandHandler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MessageHandlerInterface</token>
      </line>
      <line no="18">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CategoryRepository</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$repository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CategoryRepository</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$repository</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">repository</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$repository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @throws AssertionFailedException</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     * @throws CategoryAlreadyExistsException</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     * @throws DomainException</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__invoke</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CreateCategoryCommand</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$command</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$categoryId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CategoryId</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">from</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$command</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">ensureThatCategoryNotExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CategoryId</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">from</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$command</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$category</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Category</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$categoryId</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CategoryName</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">from</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$command</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CategoryDescription</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">from</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$command</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">repository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$category</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="45"/>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     * @throws CategoryAlreadyExistsException</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * @throws DomainException</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ensureThatCategoryNotExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CategoryId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$categoryId</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">repository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">ofId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$categoryId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CategoryAlreadyExistsException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$categoryId</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">value</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="57"/>
    </source>
  </file>
</phpunit>
