<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Product.php" path="/Domain/Product">
    <totals>
      <lines total="98" comments="0" code="98" executable="21" executed="21" percent="100.00"/>
      <methods count="10" tested="10" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Domain\Product\Product" start="14" executable="21" executed="21" crap="10">
      <namespace name="App\Domain\Product"/>
      <method name="__construct" signature="__construct(App\Domain\Product\ValueObject\ProductId $id, App\Domain\Product\ValueObject\ProductName $name, ?App\Domain\Category\Category $category, App\Domain\Product\ValueObject\ProductPrice $price, App\Shared\Application\ValueObject\Currency $currency, bool $featured)" start="23" end="37" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="create" signature="create(App\Domain\Product\ValueObject\ProductId $id, App\Domain\Product\ValueObject\ProductName $name, ?App\Domain\Category\Category $category, App\Domain\Product\ValueObject\ProductPrice $price, App\Shared\Application\ValueObject\Currency $currency, bool $featured): self" start="39" end="48" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getId" signature="getId(): App\Domain\Product\ValueObject\ProductId" start="50" end="53" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getName" signature="getName(): App\Domain\Product\ValueObject\ProductName" start="55" end="58" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getCategory" signature="getCategory(): ?App\Domain\Category\Category" start="60" end="63" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getCurrency" signature="getCurrency(): App\Shared\Application\ValueObject\Currency" start="65" end="68" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getFeatured" signature="getFeatured(): bool" start="70" end="73" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getPrice" signature="getPrice(): App\Domain\Product\ValueObject\ProductPrice" start="75" end="78" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="convertTo" signature="convertTo(App\Shared\Application\ValueObject\Currency $currency, App\Domain\Product\ValueObject\ProductPrice $price)" start="80" end="84" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="jsonSerialize" signature="jsonSerialize(): array" start="86" end="96" crap="1" executable="6" executed="6" coverage="100"/>
    </class>
    <coverage>
      <line nr="31">
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestButNoCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestIncludeCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="32">
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestButNoCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestIncludeCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="33">
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestButNoCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestIncludeCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="34">
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestButNoCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestIncludeCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="35">
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestButNoCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestIncludeCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="36">
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestButNoCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestIncludeCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="47">
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestButNoCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestIncludeCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="52">
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestButNoCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Command\CreateProduct\CreateProductCommandHandlerTest::testCreateProductWithValidRequestIncludeCategoryMustInsertRecord"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="57">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="62">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="67">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="72">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="77">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="82">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
      </line>
      <line nr="83">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
      </line>
      <line nr="89">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="90">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="91">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="92">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="93">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
      <line nr="94">
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsForPaginatorMutants"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveFeaturedProducts\RetrieveFeaturedProductsQueryHandlerTest::testRetrieveFeaturedProductsWithCurrencyConversions"/>
        <covered by="App\Tests\Unit\Application\Query\RetrieveProducts\RetrieveProductsQueryHandlerTest::testRetrieveProductsWithRecordsRepository"/>
        <covered by="App\Tests\Unit\Domain\Product\ProductTest::testCreateProduct"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Product</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Category</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Category</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Product</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ValueObject</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ProductId</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Product</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ValueObject</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ProductName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Domain</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Product</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ValueObject</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ProductPrice</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Shared</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Application</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ValueObject</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Currency</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonSerializable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Product</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonSerializable</token>
      </line>
      <line no="15">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ProductId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ProductName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">Category</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$category</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ProductPrice</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$price</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Currency</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currency</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$featured</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ProductId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ProductName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">Category</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$category</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ProductPrice</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$price</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Currency</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currency</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$featured</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">category</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$category</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">price</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$price</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">currency</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currency</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">featured</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$featured</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ProductId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ProductName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">Category</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$category</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ProductPrice</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$price</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Currency</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currency</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$featured</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$category</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$price</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currency</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$featured</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ProductId</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ProductName</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getCategory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">Category</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">category</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getCurrency</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Currency</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">currency</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getFeatured</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">featured</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getPrice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ProductPrice</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">price</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="79"/>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">convertTo</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Currency</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currency</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ProductPrice</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$price</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">currency</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currency</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">price</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$price</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">jsonSerialize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">value</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'categoryId'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCategory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'price'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">value</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'currency'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCurrency</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">value</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'featured'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFeatured</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="97">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="98"/>
    </source>
  </file>
</phpunit>
